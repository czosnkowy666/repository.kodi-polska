import groovy.json.JsonSlurper

defaultTasks 'createBundle'

group = project.name

def addons = [
        [
            url: 'https://raw.githubusercontent.com/czosnkowy666/plugin.video.kodi-polska-tvp/main/',
            releases: 'https://api.github.com/repos/czosnkowy666/plugin.video.kodi-polska-tvp/releases'
        ]

]

def version = getAddonVersion();

project.ext {
    packageName = group
    packageNameFull = packageName + '-' + version
    packageFileName = packageName + '.zip'
    localKodiAddonsLocation = ''
}

task prepBundle {
    FileTree tree = fileTree(dir: './')
    tree.include 'addon.xml'
    tree.include 'icon.png'
    tree.include 'fanart.jpg'
    tree.exclude '.gradle'
    tree.exclude '.idea'
    tree.exclude '**/target'

    outputs.files tree
}

task showFilelist(dependsOn: prepBundle) {
    doLast {
        println "Show files included in package"
        prepBundle.outputs.files.each {
            println "\t ${it}"
        }
    }
}

task createBundle(type: Zip, dependsOn: prepBundle, description : 'Create the zip file of the source.') {
    baseName packageNameFull
    from prepBundle.outputs.files
    exclude packageNameFull
    into packageName
    destinationDir file('target')
}

task cleanBuild(type:Delete) {
    delete 'target'
    delete packageFileName
    doFirst {
        println "File to delete: " + packageFileName
    }
}

task pullAddonsDetails {
    def addonsXml = new XmlSlurper( false, false ).parse(new File('./zips/addons-template.xml'))
    def addonsOutput = new File ('./zips/addons.xml')
    def addonsHash = new File ('./zips/addons.xml.md5')

    addons.each { addon ->
        // get addon XML and add it to repository addons.xml
        def req = new URL(addon.url + "addon.xml").openConnection()
        def body = req.getInputStream().getText()
        def addonXML = new XmlSlurper( false, false ).parseText(body)
        def addonVersion = addonXML.@version
        def addonId = addonXML.@id
        addonsXml.appendNode(addonXML)
        // create dir for addon files
        def addonFolder = new File('./zips/' + addonId)
        if (addonFolder.exists()) {
            addonFolder.eachFile { file ->
                file.delete()
            }
        }


        if (!addonFolder.exists())
            addonFolder.mkdirs()

        def releases = new URL(addon.releases).openConnection()
        def releasesBody = new JsonSlurper().parseText(releases.getInputStream().getText())
        String addonZipUrl = ""
        String addonZipName = ""

        releasesBody.forEach { release ->
            if ( (String) release.tag_name == (String) addonVersion ) {
                addonZipName = release.assets[0].name
                addonZipUrl = release.assets[0].browser_download_url
            }
        }

        if (addonZipUrl != "") {
            def addonZipFile = new File('./zips/' + addonId + '/' + addonZipName)
            new URL(addonZipUrl).withInputStream{ i -> addonZipFile.withOutputStream{ it << i }}
        }

        // TODO: get addon resources icon
        // https://raw.githubusercontent.com/czosnkowy666/repository.kodi-polska/main/zips/plugin.video.kodi-polska-tvp/resources/icon.png

    }

    def addonsMerged = groovy.xml.XmlUtil.serialize(addonsXml)
    def addonsMd5 = addonsMerged.md5()

    addonsOutput.write addonsMerged
    addonsHash.write addonsMd5


}

def getAddonVersion() {
    def addonXml = new File('./addon.xml')
    def rootNode = new XmlParser().parse(addonXml)
    if (rootNode.@version) {
        return rootNode.@version
    } else {
        "0.0.1"
    }
}